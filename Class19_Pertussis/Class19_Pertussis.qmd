---
title: "Class19_Pertussis"
author: "Krysten Jones (A10553682)"
format: gfm
---

# Investigating Pertussis

Pertussis aka whooping cough is a disease that can effect anyone, but can be fatal in young children. It is included in the DTaP vaccine for children and the Tdap for adults (Tdap actually has lower ammounts of acellular Pertussis than DTaP). 

Lets have a look at the numbers of pertussis in the US

The United States Centers for Disease Control and Prevention (CDC) has been compiling reported pertussis case numbers since 1922 in their National Notifiable Diseases Surveillance System (NNDSS). We can view this data on the CDC website here: https://www.cdc.gov/pertussis/surv-reporting/cases-by-year.html

> Q1. With the help of the R “addin” package datapasta assign the CDC pertussis case number data to a data frame called cdc and use ggplot to make a plot of cases numbers over time.

First as always we'll need to install the packages we're going to use. Today's includes datapasta `install.packages('datapasta')`.Unlike usual, we're not going to call it from the library function. Instead we're going to go to `Addins` up at the top and scroll down to 


There's another package called ` ` that can read through the html and find the embedded tables
```{r}
# we want the code chunk to run, but don't need it to print out the table so we'll change echo to false.
#| echo: false
cdc <- data.frame(
                          Year = c(1922L,
                                   1923L,1924L,1925L,1926L,1927L,1928L,
                                   1929L,1930L,1931L,1932L,1933L,1934L,1935L,
                                   1936L,1937L,1938L,1939L,1940L,1941L,
                                   1942L,1943L,1944L,1945L,1946L,1947L,1948L,
                                   1949L,1950L,1951L,1952L,1953L,1954L,
                                   1955L,1956L,1957L,1958L,1959L,1960L,
                                   1961L,1962L,1963L,1964L,1965L,1966L,1967L,
                                   1968L,1969L,1970L,1971L,1972L,1973L,
                                   1974L,1975L,1976L,1977L,1978L,1979L,1980L,
                                   1981L,1982L,1983L,1984L,1985L,1986L,
                                   1987L,1988L,1989L,1990L,1991L,1992L,1993L,
                                   1994L,1995L,1996L,1997L,1998L,1999L,
                                   2000L,2001L,2002L,2003L,2004L,2005L,
                                   2006L,2007L,2008L,2009L,2010L,2011L,2012L,
                                   2013L,2014L,2015L,2016L,2017L,2018L,
                                   2019L,2020L,2021L),
  Cases = c(107473,
                                   164191,165418,152003,202210,181411,
                                   161799,197371,166914,172559,215343,179135,
                                   265269,180518,147237,214652,227319,103188,
                                   183866,222202,191383,191890,109873,
                                   133792,109860,156517,74715,69479,120718,
                                   68687,45030,37129,60886,62786,31732,28295,
                                   32148,40005,14809,11468,17749,17135,
                                   13005,6799,7717,9718,4810,3285,4249,
                                   3036,3287,1759,2402,1738,1010,2177,2063,
                                   1623,1730,1248,1895,2463,2276,3589,
                                   4195,2823,3450,4157,4570,2719,4083,6586,
                                   4617,5137,7796,6564,7405,7298,7867,
                                   7580,9771,11647,25827,25616,15632,10454,
                                   13278,16858,27550,18719,48277,28639,
                                   32971,20762,17972,18975,15609,18617,6124,
                                   2116)
)

```

For some reason, it will only let me paste with the column titles if you don't paste in an R block, then change it to R block after pasting

```{r}
library(ggplot2)
ggplot(cdc, aes(Year, Cases)) +
  geom_line() +
  geom_point()
```

> Q2. Using the ggplot geom_vline() function add lines to your previous plot for the 1946 introduction of the wP vaccine and the 1996 switch to aP vaccine (see example in the hint below). What do you notice?

```{r}
library(ggplot2)
ggplot(cdc, aes(Year, Cases)) +
  geom_line() +
  geom_point() +
  geom_vline(xintercept=1946, color ="red") +
  geom_vline(xintercept=1996, color ="blue") +
  geom_vline(xintercept=2019, color ="green")
```

> Q3. Describe what happened after the introduction of the aP vaccine? Do you have a possible explanation for the observed trend?

Could be due to transition from wP vaccine to aP vaccine.
The aP vaccine induced protection wanes faster than wP, why?
Whole bacteria vs part of the bacteria (bordatella). 

## CMI-PB project

The CMI-PB project collects and makes available data on the immune response to Pertussis booster vaccination.

We will access this data via the API (Application profile interface).
We will use the JSON lite package `jsonlite` using `install.packages('jsonlite')`. 

```{r}
library(jsonlite)
# go to website, hover over link and click copy link
# if you don't change simplify vector to true, it will then return the json file instead of a datatable
subject <- read_json("http://cmi-pb.org/api/subject", simplifyVector = TRUE)
head(subject)
```
> Q4. How many aP and wP infancy vaccinated subjects are in the dataset?

```{r}
# how many subjects total
nrow(subject)

# how many aP vs wP
table(subject$infancy_vac)
```
60 aP and 58 wP

> Q5. How many Male and Female subjects/patients are in the dataset?

```{r}
table(subject$biological_sex)
```
79 female, 39 male

> Q6. What is the breakdown of race and biological sex (e.g. number of Asian females, White males etc…)?

```{r}
table(subject$race, subject$biological_sex)
```

Age distribution

##Calculate Age

>Q7. Using this approach determine (i) the average age of wP individuals, (ii) the average age of aP individuals; and (iii) are they significantly different?

```{r}
#| warning: false
library(tidyverse)
#add new column to convert to current age
subject$current_age <-time_length(today() - ymd(subject$year_of_birth),(unit="year"))
head(subject)
```
ii)
```{r}
library(dplyr)

wP <- subject %>% 
  filter(infancy_vac == "wP") %>%
  summary(current_age)
wP
```
mean age of wP subject is 36.32 years old.

ii)
```{r}
aP <- subject %>% 
  filter(infancy_vac == "aP") %>%
  summary(current_age)
aP
```
mean aP current age = 26.03 years.

iii) Using a t-test select only the wP and aP ages

```{r}
sig_test <- subject %>% 
  select(current_age, infancy_vac) %>%
  group_by(infancy_vac)
head(sig_test)
dim(sig_test)
```

```{r}
t_test_result <- t.test(sig_test$infancy_vac =="aP", sig_test$infancy_vac =="wP")
t_test_result
```

With a p-value of 0.7956 they are not significantly different.


>Q8. Determine the age of all individuals at time of boost?

Want the age of individuals at time of boost because want to see how long the booster vaccine is maintaining titer levels

```{r}
#| warning: false
library(tidyverse)
#want to know when this happened
subject$age <-time_length(ymd(subject$date_of_boost) - ymd(subject$year_of_birth),(unit="year"))
head(subject)
```

>Q9. With the help of a faceted boxplot or histogram (see below), do you think these two groups are significantly different?

```{r}
ggplot(subject, aes(age, fill=infancy_vac))+
  facet_wrap(vars(infancy_vac), ncol=1)+
  geom_histogram()
```

```{r}
table(subject$dataset)
```

## Grabbing other tables

```{r}
titer <- read_json("http://cmi-pb.org/api/v4/plasma_ab_titer", simplifyVector = TRUE)
head(titer)

specimen <-read_json("http://cmi-pb.org/api/specimen", simplifyVector = TRUE)
head(specimen)
```



## Innerjoin vs full join

want to merge the subject and the titer tables together

>Q9. Complete the code to join specimen and subject tables to make a new merged data frame containing all specimen records along with their associated subject detail.

inner_join(x,y) will only keep the rows that have all the column values
full_join(x,y) will keep all rows if have any data (you will then have to compensate for missing values)

```{r}
meta <- inner_join(specimen, subject)
head(meta)
```
>Q10. Now using the same procedure join meta with titer data so we can further analyze this data in terms of time of visit aP/wP, male/female etc.

```{r}
# x and y dataframes order determines what the order of the columns are in the combined dataframe
abdata <- inner_join(titer,meta)
dim(abdata)
head(abdata)
```
So there are 41810 rows and 22 columns

## Determining how many different antibody types

>Q11. How many specimens (i.e. entries in abdata) do we have for each isotype?

```{r}
igg <- abdata %>% 
  filter(isotype == "IgG")
dim(igg)

ige <- abdata %>% 
  filter(isotype == "IgE")
dim(ige)
```
IgG = 3240
IgE = 6698

>Q12. What are the different $dataset values in abdata and what do you notice about the number of rows for the most “recent” dataset?

```{r}
ggplot(igg)+
  aes(MFI_normalised, antigen) +
  geom_boxplot()
```
OVA = albumin = control
TT = tetnus toxin
PT = protessus toxin
DT = diptheria toxin
PRN = Pertactin autotransporter
FHA = Filamentous hemagglutinin
FIM2/3 = Mixture of Fim2 and Fim3

## Examining IgG Ab titer levels

>Q13. Complete the following code to make a summary boxplot of Ab titer levels (MFI) for all antigens:

```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen) +
  geom_boxplot() + 
    xlim(0,75) +
  facet_wrap(vars(visit), nrow=2)
```

>Q14. What antigens show differences in the level of IgG antibody titers recognizing them over time? Why these and not others?


```{r}
ggplot(igg) +
  aes(MFI_normalised, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  facet_wrap(vars(visit), nrow=2) +
  xlim(0,75) +
  theme_bw()
```

```{r}
igg %>% filter(visit != 8) %>%
ggplot() +
  aes(MFI_normalised, antigen, col=infancy_vac ) +
  geom_boxplot(show.legend = FALSE) + 
  xlim(0,75) +
  facet_wrap(vars(infancy_vac, visit), nrow=2)
```

> Q15. Filter to pull out only two specific antigens for analysis and create a boxplot for each. You can chose any you like. Below I picked a “control” antigen (“OVA”, that is not in our vaccines) and a clear antigen of interest (“PT”, Pertussis Toxin, one of the key virulence factors produced by the bacterium B. pertussis).


> Q16. What do you notice about these two antigens time courses and the PT data in particular?

> Q17. Do you see any clear difference in aP vs. wP responses?

```{r}
#abdata$planned_day_relative_to_boost
igpt.21 <- abdata %>% filter(dataset=="2021_dataset",
                             isotype == "IgG",
                             antigen == "PT")
head(igpt.21)

ggplot(igpt.21, 
       aes(planned_day_relative_to_boost, MFI_normalised, col=infancy_vac)) +
   geom_point()+
   geom_line(aes(group = subject_id), linewidth =0.5, alpha = 0.5) +
  geom_smooth(se=FALSE, span =0.4, linewidth = 3)+
   geom_vline(xintercept=0, linetype="dashed", color ="black") +
  geom_vline(xintercept=14, linetype="dashed", color ="purple")
```

Now for year 2022
```{r}
igpt.22 <- abdata %>% filter(dataset=="2022_dataset",
                             isotype == "IgG",
                             antigen == "PT")
head(igpt.22)

ggplot(igpt.22, 
       aes(planned_day_relative_to_boost, MFI_normalised, col=infancy_vac)) +
   geom_point()+
   geom_line(aes(group = subject_id), linewidth =0.5, alpha = 0.5) +
  geom_smooth(se=FALSE, span =0.4, linewidth = 3)
 
```
> Q18. Does this trend look similar for the 2020 dataset?

```{r}
igpt.20 <- abdata %>% filter(dataset=="2020_dataset",
                             isotype == "IgG",
                             antigen == "PT")
head(igpt.20)

ggplot(igpt.20, 
       aes(planned_day_relative_to_boost, MFI_normalised, col=infancy_vac)) +
   geom_point()+
   geom_line(aes(group = subject_id), linewidth =0.5, alpha = 0.5) +
  geom_smooth(se=FALSE, span =0.4, linewidth = 1) +
  geom_vline(xintercept=0, linetype="dashed", color ="black") +
  geom_vline(xintercept=14, linetype="dashed", color ="purple")
```
Yes, but it is more difficult to see due to scale and the differences seem to even out past day 100, but it is hard to tell due to not having later datapoints from aP individuals. 

